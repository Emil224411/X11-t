#version 460 core
#define N 250
#define SIZE ((N+2) * (N+2))

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D outimg;
layout (std430, binding = 1) buffer input_buf { 
	float dens[SIZE]; 
	float u[SIZE]; 
	float v[SIZE];
};
layout (std430, binding = 2) buffer out_buf { 
	float dens_prev[SIZE]; 
	float u_prev[SIZE]; 
	float v_prev[SIZE];
};
//uniform float dt;
uint i = (gl_GlobalInvocationID.x+1) + (N+2) * (N+2-(gl_GlobalInvocationID.y)+1);

void main()
{
	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
	vec4 val = vec4(0.0,0.0,0.0,1.0);

	val.x = float(pos.x)/(gl_NumWorkGroups.x) * dens[i];
	val.y = float(pos.y)/(gl_NumWorkGroups.y) * dens[i];
	val.z = dens[i];
	//val.x = ;
	//val.y = float(pos.y)/(gl_NumWorkGroups.y);

	imageStore(outimg, pos, val);
	dens_prev[i] = 0.0;
	u_prev[i] = 0.0;
	v_prev[i] = 0.0;
}


